{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1515,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T19:54:12.664Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1515,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T19:54:30.142Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1527,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:00:21.690Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1527,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T20:00:24.873Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1527,"level":30,"msg":"TEST SUBJECT: RANDOM VAR","time":"2015-12-18T20:00:31.181Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1527,"level":30,"Rows affected":1,"msg":"Insert 33f7a729-16e2-43ae-9d22-d276f22712fdinto intest","time":"2015-12-18T20:00:31.488Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1710,"level":30,"msg":"env settings","time":"2015-12-18T20:41:23.211Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:41:29.896Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T20:41:35.238Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"msg":"TEST SUBJECT: RANDOM VAR","time":"2015-12-18T20:41:41.157Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"Rows affected":1,"msg":"Insert 6f9e9e72-fcc7-45ed-aadd-3b8bb8efda99into intest","time":"2015-12-18T20:41:41.462Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T20:41:42.846Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1712,"level":30,"msg":"NON-TEST SUBJECT: PREDICT WINNING","time":"2015-12-18T20:41:43.673Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1718,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:45:06.511Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1718,"level":30,"msg":"ALREADY IN TEST: FEED ACTIVE VARIATION","time":"2015-12-18T20:45:07.923Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1725,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:49:18.223Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1727,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:50:22.616Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1731,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:51:10.251Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1731,"level":50,"msg":"ER_DUP_ENTRY: Duplicate entry 'tuuid1' for key 'unique_testUuid' Query move to euuid1_userdata","time":"2015-12-18T20:51:13.646Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1741,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:53:06.104Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1743,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:54:32.862Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1743,"level":50,"msg":"ER_DUP_ENTRY: Duplicate entry 'tuuid1' for key 'unique_testUuid' Query move to euuid1_userdata","time":"2015-12-18T20:54:35.576Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1751,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:55:22.010Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1755,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:56:58.647Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1763,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:57:16.000Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1763,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T20:57:21.718Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1765,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:57:28.556Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1765,"level":50,"msg":"ER_DUP_ENTRY: Duplicate entry 'tuuid1' for key 'unique_testUuid' Query move to euuid1_userdata","time":"2015-12-18T20:57:32.488Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1772,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:59:30.542Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1772,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T20:59:33.372Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1774,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T20:59:47.717Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1801,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:00:04.178Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1812,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:00:55.749Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1812,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T21:00:59.296Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1818,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:01:54.477Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1818,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T21:02:01.888Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1820,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:02:23.263Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1826,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:02:38.500Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1826,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T21:02:41.630Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1832,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:03:37.851Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1841,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-18T21:07:07.438Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1841,"level":50,"msg":"No rows affect query move to euuid1_userdata","time":"2015-12-18T21:07:23.746Z","v":0}
{"name":"sigmatic","hostname":"Loeks-MacBook-Pro.local","pid":1841,"level":50,"msg":"No rows affect query deleteeuuid1_intest WHERE testUuid=tuuid1","time":"2015-12-18T21:07:23.843Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":25430,"level":30,"msg":"env settings","time":"2015-12-19T17:27:43.540Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26663,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T19:42:32.731Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26923,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T19:55:07.503Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26966,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T19:57:12.166Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26983,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T19:57:52.410Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26983,"level":30,"msg":"req:  { _readableState: \n   { highWaterMark: 16384,\n     buffer: [],\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: false,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     calledRead: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     objectMode: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  domain: null,\n  _events: {},\n  _maxListeners: 10,\n  socket: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555078351,\n     _monotonicStartTime: 460345162,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  connection: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555078351,\n     _monotonicStartTime: 460345162,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:3000',\n     'content-length': '169',\n     'cache-control': 'no-cache',\n     origin: 'chrome-extension://mkhojklkhkdaghjjfdnphfphiaiohkef',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36',\n     'content-type': 'text/plain;charset=UTF-8',\n     accept: '*/*',\n     'accept-encoding': 'gzip, deflate',\n     'accept-language': 'en-US,en;q=0.8,fr;q=0.6',\n     cookie: 'gsScrollPos=',\n     pragma: 'no-cache' },\n  trailers: {},\n  _pendings: [],\n  _pendingIndex: 0,\n  url: '/fulfillment',\n  method: 'POST',\n  statusCode: null,\n  client: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555078351,\n     _monotonicStartTime: 460345162,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  _consuming: false,\n  _dumped: false,\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  upgrade: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/fulfillment',\n  _parsedUrl: \n   { protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/fulfillment',\n     path: '/fulfillment',\n     href: '/fulfillment',\n     _raw: '/fulfillment' },\n  params: {},\n  query: {},\n  res: \n   { domain: null,\n     _events: { finish: [Function] },\n     _maxListeners: 10,\n     output: [],\n     outputEncodings: [],\n     writable: true,\n     _last: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _headerSent: false,\n     _header: '',\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _hangupClose: false,\n     socket: \n      { _connecting: false,\n        _handle: [Object],\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        onend: [Function],\n        destroyed: false,\n        bytesRead: 630,\n        _bytesDispatched: 0,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1450555078351,\n        _monotonicStartTime: 460345162,\n        parser: [Object],\n        ondata: [Function],\n        _paused: false,\n        _httpMessage: [Circular] },\n     connection: \n      { _connecting: false,\n        _handle: [Object],\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        onend: [Function],\n        destroyed: false,\n        bytesRead: 630,\n        _bytesDispatched: 0,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1450555078351,\n        _monotonicStartTime: 460345162,\n        parser: [Object],\n        ondata: [Function],\n        _paused: false,\n        _httpMessage: [Circular] },\n     _headers: { 'x-powered-by': 'Express' },\n     _headerNames: { 'x-powered-by': 'X-Powered-By' },\n     req: [Circular],\n     locals: {} },\n  body: {},\n  route: \n   { path: '/fulfillment',\n     stack: [ [Object] ],\n     methods: { post: true } } }","time":"2015-12-19T19:57:58.376Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":26983,"level":30,"msg":"req:  { _readableState: \n   { highWaterMark: 16384,\n     buffer: [],\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: false,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     calledRead: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     objectMode: false,\n     defaultEncoding: 'utf8',\n     ranOut: false,\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  domain: null,\n  _events: {},\n  _maxListeners: 10,\n  socket: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555333691,\n     _monotonicStartTime: 460600491,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  connection: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555333691,\n     _monotonicStartTime: 460600491,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:3000',\n     'content-length': '169',\n     'cache-control': 'no-cache',\n     origin: 'chrome-extension://mkhojklkhkdaghjjfdnphfphiaiohkef',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36',\n     'content-type': 'text/plain;charset=UTF-8',\n     accept: '*/*',\n     'accept-encoding': 'gzip, deflate',\n     'accept-language': 'en-US,en;q=0.8,fr;q=0.6',\n     cookie: 'gsScrollPos=',\n     pragma: 'no-cache' },\n  trailers: {},\n  _pendings: [],\n  _pendingIndex: 0,\n  url: '/fulfillment',\n  method: 'POST',\n  statusCode: null,\n  client: \n   { _connecting: false,\n     _handle: \n      { fd: 19,\n        writeQueueSize: 0,\n        owner: [Circular],\n        onread: [Function: onread],\n        reading: true },\n     _readableState: \n      { highWaterMark: 16384,\n        buffer: [],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: false,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        calledRead: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: false,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Object],\n        timeout: [Function],\n        error: [Function],\n        close: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16384,\n        objectMode: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     onend: [Function],\n     destroyed: false,\n     bytesRead: 630,\n     _bytesDispatched: 0,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _connections: 1,\n        connections: [Getter/Setter],\n        _handle: [Object],\n        _usingSlaves: false,\n        _slaves: [],\n        allowHalfOpen: true,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        _connectionKey: '4:127.0.0.1:3000' },\n     _idleTimeout: 120000,\n     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },\n     _idleStart: 1450555333691,\n     _monotonicStartTime: 460600491,\n     parser: \n      { _headers: [],\n        _url: '',\n        onHeaders: [Function: parserOnHeaders],\n        onHeadersComplete: [Function: parserOnHeadersComplete],\n        onBody: [Function: parserOnBody],\n        onMessageComplete: [Function: parserOnMessageComplete],\n        socket: [Circular],\n        incoming: [Circular],\n        maxHeaderPairs: 2000,\n        onIncoming: [Function] },\n     ondata: [Function],\n     _paused: false,\n     _httpMessage: \n      { domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        output: [],\n        outputEncodings: [],\n        writable: true,\n        _last: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _headerSent: false,\n        _header: '',\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _hangupClose: false,\n        socket: [Circular],\n        connection: [Circular],\n        _headers: [Object],\n        _headerNames: [Object],\n        req: [Circular],\n        locals: {} } },\n  _consuming: false,\n  _dumped: false,\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  upgrade: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/fulfillment',\n  _parsedUrl: \n   { protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/fulfillment',\n     path: '/fulfillment',\n     href: '/fulfillment',\n     _raw: '/fulfillment' },\n  params: {},\n  query: {},\n  res: \n   { domain: null,\n     _events: { finish: [Function] },\n     _maxListeners: 10,\n     output: [],\n     outputEncodings: [],\n     writable: true,\n     _last: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _headerSent: false,\n     _header: '',\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _hangupClose: false,\n     socket: \n      { _connecting: false,\n        _handle: [Object],\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        onend: [Function],\n        destroyed: false,\n        bytesRead: 630,\n        _bytesDispatched: 0,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1450555333691,\n        _monotonicStartTime: 460600491,\n        parser: [Object],\n        ondata: [Function],\n        _paused: false,\n        _httpMessage: [Circular] },\n     connection: \n      { _connecting: false,\n        _handle: [Object],\n        _readableState: [Object],\n        readable: true,\n        domain: null,\n        _events: [Object],\n        _maxListeners: 10,\n        _writableState: [Object],\n        writable: true,\n        allowHalfOpen: true,\n        onend: [Function],\n        destroyed: false,\n        bytesRead: 630,\n        _bytesDispatched: 0,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Object],\n        _idleTimeout: 120000,\n        _idleNext: [Object],\n        _idlePrev: [Object],\n        _idleStart: 1450555333691,\n        _monotonicStartTime: 460600491,\n        parser: [Object],\n        ondata: [Function],\n        _paused: false,\n        _httpMessage: [Circular] },\n     _headers: { 'x-powered-by': 'Express' },\n     _headerNames: { 'x-powered-by': 'X-Powered-By' },\n     req: [Circular],\n     locals: {} },\n  body: {},\n  route: \n   { path: '/fulfillment',\n     stack: [ [Object] ],\n     methods: { post: true } } }","time":"2015-12-19T20:02:13.716Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27026,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T20:02:18.930Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27026,"level":30,"msg":"modules: undefined","time":"2015-12-19T20:02:22.562Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27043,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T20:03:03.515Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27043,"level":30,"msg":"modules:","time":"2015-12-19T20:03:08.203Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27073,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T20:05:01.218Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27102,"level":30,"NODE_ENV":"debug","NODE_HOST":"local","msg":"env settings","time":"2015-12-19T20:06:56.134Z","v":0}
{"name":"sigmatic","hostname":"jomealy3.local","pid":27102,"level":30,"msg":"","time":"2015-12-19T20:07:06.490Z","v":0}
